# -*- coding: utf-8 -*-
"""Causal Impact 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PDs5BX-Xutl5L6p1QSP4JHxv_gf6jBzD
"""

import streamlit as st
import pandas as pd
from causalimpact import CausalImpact
import matplotlib.pyplot as plt
from io import BytesIO

# Page config
st.set_page_config(page_title="Causal Impact Dashboard", layout="wide")
st.title("üìâ Causal Impact Analysis (Brand Pause)")

# Load data
@st.cache_data
def load_data():
    df = pd.read_csv("dummy_data_ci.csv", parse_dates=["date"])
    return df

df = load_data()

# Validate columns
required_columns = {"date", "market", "conversions", "Paid Search", "Paid Social"}
if not required_columns.issubset(df.columns):
    st.error(f"Missing columns in CSV. Required: {required_columns}")
    st.stop()

# Input: pause date
pause_date = '2024-07-28'

# Input: market selection
markets = df["market"].unique()
selected_market = st.selectbox("üåç Select Market", markets)

# Filter and prepare data
df_m = df[df["market"] == selected_market].copy()
df_m = df_m[["date", "Paid Search", "Paid Social", "conversions"]]
df_m = df_m.set_index("date")

full_weeks = df_m.index.sort_values().unique()
pre_period = [full_weeks.min(), full_weeks[full_weeks < pd.to_datetime(pause_date)].max()]
post_period = [pd.to_datetime(pause_date), full_weeks.max()]

ci_data = df_m[["conversions", "Paid Search", "Paid Social"]]
impact = CausalImpact(ci_data, pre_period, post_period)

# Output
st.subheader("üìä Summary")
st.text(impact.summary())

st.subheader("üìù Report")
st.markdown(f"<pre>{impact.summary(output='report')}</pre>", unsafe_allow_html=True)

st.subheader("üìà Impact Plot")
st.write("üìã Columns in impact.inferences:")
st.write(impact.inferences.columns.tolist())

results = impact.inferences
fig, ax = plt.subplots(figsize=(10, 6))
ax.plot(results.index, results['response'], label='Actual')
ax.plot(results.index, results['preds'], label='Predicted (No Pause)', linestyle='--')
ax.fill_between(results.index, results['preds_lower'], results['preds_upper'], color='gray', alpha=0.3)
ax.axvline(pd.to_datetime(pause_date), color='red', linestyle='--', label='Pause Start')
ax.set_title("Causal Impact: Conversions Over Time")
ax.set_xlabel("Date")
ax.set_ylabel("Conversions")
ax.legend()
ax.grid(True)

# Streamlit image render
buf = BytesIO()
fig.savefig(buf, format="png", bbox_inches="tight")
buf.seek(0)
st.image(buf)
buf.close()

# Manually plot the 'conversions' data from pre and post period
plt.figure(figsize=(10, 6))
plt.plot(df_m.index, df_m['conversions'], label='Conversions')
plt.title('Conversions over Time')
plt.xlabel('Date')
plt.ylabel('Conversions')
plt.legend()
plt.grid(True)

# Save to buffer and show in Streamlit
buf = BytesIO()
plt.savefig(buf, format="png", bbox_inches="tight")
buf.seek(0)
st.image(buf)
buf.close()
